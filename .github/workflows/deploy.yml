name: 部署（彻底消除嵌套）
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4

      - name: 安装 Node.js 20.19.0
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.0
          cache: 'npm'

      - name: 构建前端
        run: |
          cd frontend
          npm install
          npm run build
          if [ $(ls -A "dist" | wc -l) -eq 0 ]; then
            echo "dist 为空，构建失败"
            exit 1
          fi

      # 1. 清理服务器所有旧文件（包括嵌套目录）
      - name: 彻底清理服务器
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # 删除整个 frontend 目录（重新创建干净的）
            rm -rf /var/www/programming-tools/frontend
            # 删除整个 backend 目录
            rm -rf /var/www/programming-tools/backend
            # 重新创建空目录
            mkdir -p /var/www/programming-tools/frontend /var/www/programming-tools/backend

      # 2. 前端传输：进入 dist 目录后再传（无任何父目录）
      - name: 传输前端文件（无嵌套）
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "."  # 传输当前目录下所有内容（即 dist 内的文件）
          target: "/var/www/programming-tools/frontend"
          working_dir: "./frontend/dist"  # 关键：先进入 frontend/dist 目录

      # 3. 后端传输：进入 backend 目录后再传（无嵌套）
      - name: 传输后端文件（无嵌套）
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "."  # 传输当前目录下所有内容（即 backend 内的文件）
          target: "/var/www/programming-tools/backend"
          working_dir: "./backend"  # 关键：先进入 backend 目录

      # 4. 验证目录结构（确保无嵌套）
      - name: 验证服务器路径
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "=== 前端目录（应直接有 index.html） ==="
            ls -la /var/www/programming-tools/frontend
            echo "=== 后端目录（应直接有 app.js） ==="
            ls -la /var/www/programming-tools/backend

      # 5. 启动服务
      - name: 启动服务
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /var/www/programming-tools/backend
            npm install
            npm install -g pm2 || true
            pm2 restart app.js || pm2 start app.js
            sudo systemctl restart caddy