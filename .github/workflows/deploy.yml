name: 部署（用 rsync 精准传输）
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4

      - name: 安装 Node.js 20.19.0
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.0
          cache: 'npm'

      - name: 构建前端
        run: |
          cd frontend
          npm install
          npm run build
          if [ $(ls -A "dist" | wc -l) -eq 0 ]; then
            echo "dist 为空，构建失败"
            exit 1
          fi

      # 关键：用 rsync 传输，只传指定文件，排除仓库根目录
      - name: 部署到服务器（rsync 精准传输）
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # 服务器目标目录
            PROJECT_DIR="/var/www/programming-tools"
            
            # 彻底清理旧目录（连目录本身一起删）
            rm -rf $PROJECT_DIR/frontend $PROJECT_DIR/backend
            mkdir -p $PROJECT_DIR/frontend $PROJECT_DIR/backend
            
            # 从 GitHub Actions 环境同步文件到服务器（通过 rsync）
            # 1. 同步前端 dist 内容到服务器 frontend 目录
            rsync -avz --delete /github/workspace/frontend/dist/ $PROJECT_DIR/frontend/
            
            # 2. 同步后端内容到服务器 backend 目录
            rsync -avz --delete /github/workspace/backend/ $PROJECT_DIR/backend/
            
            # 验证传输结果
            echo "=== 前端目录内容 ==="
            ls -la $PROJECT_DIR/frontend
            echo "=== 后端目录内容 ==="
            ls -la $PROJECT_DIR/backend
            
            # 启动服务
            cd $PROJECT_DIR/backend
            npm install
            npm install -g pm2 || true
            pm2 restart app.js || pm2 start app.js
            sudo systemctl restart caddy