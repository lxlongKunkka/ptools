name: 最终部署（强制使用 scp 传输）
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4

      - name: 安装 Node.js 20.19.0
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.0
          cache: 'npm'

      - name: 构建前端
        run: |
          cd frontend
          npm install
          npm run build
          ls -la dist  # 确认 dist 存在

      # 清理服务器旧文件（必须步骤）
      - name: 清理服务器旧目录
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            rm -rf /var/www/programming-tools/frontend/*
            rm -rf /var/www/programming-tools/backend/*

      # 前端文件传输（仅用 scp-action）
      - name: 传输前端 dist
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "frontend/dist/*"
          target: "/var/www/programming-tools/frontend"

      # 后端文件传输（仅用 scp-action）
      - name: 传输后端文件
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "backend/*"
          target: "/var/www/programming-tools/backend"

      # 启动服务
      - name: 启动服务
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /var/www/programming-tools/backend
            npm install -g pm2 || true
            pm2 restart app.js || pm2 start app.js
            sudo systemctl restart caddy